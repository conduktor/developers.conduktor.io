openapi: 3.1.0
info:
  title: Conduktor API
  version: v2
  summary: The API to interact with Conduktor Gateway programmatically
  contact:
    email: contact@conduktor.io
    url: https://docs.conduktor.io
  x-logo:
    url: https://avatars.githubusercontent.com/u/60062294?s=200&v=4
    backgroundColor: '#FFFFFF'
    altText: Conduktor logo
tags:
- name: Introduction
  description: |
    The Conduktor Gateway REST API 's aim is to help you configure your Gateway.

    Get started with Conduktor Gateway [self-hosted](https://docs.conduktor.io/gateway/installation/) today. Setup takes only a few minutes.
- name: Authentication
  description: "Authentication to the API requires a basic authentication.\n\nTo get\
    \ a token and use it you must go through the following steps:\n\n * Configure\
    \ the admin password in the Gateway YAML configuration file.\n \n * Use the password\
    \ in the **authorization** header of your requests.\n\nExample: \n\n```shell\n\
    curl -X GET \"https://your.gateway-api.host/gateway/v2/vclusters\" \\\n      -H\
    \ \"accept: application/json\" \\\n      --user \"admin:password\"\n```"
- name: Kinds
  description: |
    ### Definition

    Kinds the resource types of the Conduktor gateway.

    ### Conduktor Gateway Kinds

    The following kinds are available in the Conduktor Gateway API:

    [//]: # (* `VCluster`)
    * `AliasTopic`
    * `ConcentratedTopic`
    * `ConcentrationRule`
    * `Interceptor`
    * `Plugin`

    [//]: # (* `ServiceAccount`)

    [//]: # (* `Group`)
    [//]: # (* `Token`)
- name: Api Groups
  description: |+
    ### Definition

    API groups a set of resources that share the same API path prefix. They are used to organize the API endpoints and the
    resources they manage.
    The versioning is set at this level, so all the resources in the same group share the same version.
    Kinds of a same group can be nested paths in the API, for example, the `vcluster` kind can have an `alias-topic` kind
    nested in it.

    ### Conduktor Api Groups

    The Gateway API consist of a single API group right now (`gateway`), and it manages the following resources:

    | Api Group | Kinds                                                                                                                                              |
    |-----------|----------------------------------------------------------------------------------------------------------------------------------------------------|
    | `gateway` | `alias-topics`, `concentrated-topics`, `concentration-rules`, </br> `interceptors`, `plugins` |



- name: Versioning
  description: |+
    * __The version is set at the api group level__. It is incremented when a breaking change happens in the schema of an endpoint of the group (that has been marked `stable`). The n-1 version is still available for a while to allow users to migrate. The version is part of the endpoint path.
    * The API version (v2) is the global version of the Conduktor Gateway API, it should not change unless there is a complete overhaul of the API.


    Endpoint also have a status to manage their API lifecycle, following the order below:
    * __preview__: this is an early-stage feature, really likely to change
    * __beta__: early access feature, breaking change
    * __stable__: Production-ready endpoint, no breaking change
    * __deprecated__: This endpoint isn't supported anymore and the user should migrate


- name: Conventions
  description: |+
    ### Path conventions

    The API follows as much as possible the endpoints structure below for each kind of resource:

    * `GET /{api-group}/{version}/{kind}/{name}` to read a resource
    * `GET /{api-group}/{version}/{kind}` to list resources of a kind
    * `PUT /{api-group}/{version}/{kind}` to update or create a resource
    * `DELETE /{api-group}/{version}/{kind}/{name}` to delete a resource (returns 204 No Content)
    * `POST` is used for specific operations that don't fit this CRUD model. PUT is the default verb for updates and
      creations.
    * Important principle: the result of a GET can be reused as the body of a PUT to update the resource.

    __Nested paths__:
    When a kind is nested in another kind, the parent kind is used in the endpoint path.
    For example, the `AliasTopic` kind is nested in the `VCluster` one, so the endpoints for interceptors are:

    * `GET /gateway/v2/vclusters/{name}/alias-topics`
    * `GET /gateway/v2/vclusters/{name}/alias-topics/{logicalName}`
    * `PUT /gateway/v2/vclusters/{name}/alias-topics`
    * `DELETE /gateway/v2/vclusters/{name}/alias-topics/{logicalName}`

    ### Other conventions

    * All requests and responses are in JSON and should have their `content-type` header set to `application/json`
    * Every kind has a pluralized name (e.g. `vclusters` for the `VCluster` kind) that is used in the endpoint path.
    * Errors have a standard format:
        * The HTTP status code is used to indicate the type of error.
        * The response body contains a common JSON object for every error:
            * `title`: a unique error code for the error.
            * `message`: a human-readable message for the error.
            * `cause`: additional information about the error.
    * All timestamps are in ISO 8601 format.

- name: alias-topics
  description: |+
    ### Definition

    https://docs.conduktor.io/gateway/concepts/Logical_topics/Alias%20topics/

    ### Available operations

    * List alias topics
    * Get an alias topic
    * Upsert an alias topic
    * Delete an alias topic

    ### Identity

    An alias topic is identified by the `logicalName` inside a `vcluster`.

    ### Schema

    <SchemaDefinition schemaRef="#/components/schemas/AliasTopic" />


- name: concentrated-topics
  description: |+
    ### Definition

    https://docs.conduktor.io/gateway/concepts/Logical_topics/Concentration/

    ### Available operations

    * List concentrated topics
    * Get a concentrated topic

    Concentrated topics are created when a concentration rule is applied. They are not created or deleted directly by the API.

    ### Identity

    A concentrated topic is identified by the `logicalName`.

    ### Schema

    <SchemaDefinition schemaRef="#/components/schemas/ConcentratedTopic" />


- name: concentration-rules
  description: |+
    ### Definition

    https://docs.conduktor.io/gateway/concepts/Logical_topics/Concentration/

    ### Available operations

    * List concentration rules
    * Get a concentration rule
    * Upsert a concentration rule
    * Delete a concentration rule


    ### Identity

    A concentration rule is identified by its name inside a vCluster.

    ### Schema

    <SchemaDefinition schemaRef="#/components/schemas/ConcentrationRule" />


- name: interceptors
  description: "### Definition\n\nhttps://docs.conduktor.io/gateway/concepts/Interceptors-and-plugins/\n\
    \n### Available operations\n\n* List the interceptors\n* Get an interceptor\n\
    * Upsert an interceptor\n* Delete an interceptor\n\n### Identity\n\nAn interceptor\
    \ is identified by its `name` and its `scope`.\nThe `scope` is itself composed\
    \ of 3 optional fields `vCluster`, `group`, `username`. \nA __global__ interceptor\
    \ is an interceptor whose `scope` has its fields empty.\n\n### Schema\n\n<SchemaDefinition\
    \ schemaRef=\"#/components/schemas/Interceptor\"/>\n\n\n"
- name: plugins
  description: |+
    ### Definition

    https://docs.conduktor.io/gateway/concepts/Interceptors-and-plugins/

    ### Available operations

    * List the available plugins of the Gateway

    ### Identity

    A plugin is identified by its `pluginId`.

    The list of plugins is fixed for a given Gateway instance.
    The list is fixed and cannot be modified.

    ### Schema

    <SchemaDefinition schemaRef="#/components/schemas/Plugin" />


paths:
  /gateway/v2/vclusters/{vClusterName}/alias-topics:
    get:
      tags:
      - alias-topics
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        List the alias topics of a vcluster

      operationId: List the alias topics
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AliasTopic'
              example:
              - logicalName: logicalName1
                physicalName: physicalName1
                clusterId: main
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/alias-topics' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
    put:
      tags:
      - alias-topics
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Upsert an alias topic in a vcluster

      operationId: Upsert an alias topic
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AliasTopic'
            example:
              logicalName: logicalName1
              physicalName: physicalName1
              clusterId: main
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasTopic'
              example:
                logicalName: logicalName1
                physicalName: physicalName1
                clusterId: main
        '400':
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                title: The request is not valid
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request PUT \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/alias-topics' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --header 'Content-Type: application/json' \
            --data-raw '{"logicalName":"logicalName1","physicalName":"physicalName1","clusterId":"main"}'
  /gateway/v2/vclusters/{vClusterName}/alias-topics/{logicalName}:
    get:
      tags:
      - alias-topics
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Read an alias topic of a vcluster

      operationId: Get an alias topic
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      - name: logicalName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AliasTopic'
              example:
                logicalName: logicalName1
                physicalName: physicalName1
                clusterId: main
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given logicalName does not exist in the given vCluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given logicalName does not exist in the given vCluster
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/alias-topics/logicalName1' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
    delete:
      tags:
      - alias-topics
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Delete an alias topic in a vcluster

      operationId: Delete an alias topic
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      - name: logicalName
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given logicalName does not exist in the given vCluster
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given logicalName does not exist in the given vCluster
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request DELETE \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/alias-topics/logicalName1' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
  /gateway/v2/vclusters/{vClusterName}/concentrated-topics:
    get:
      tags:
      - concentrated-topics
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        List the concentrated topics of a vcluster

      operationId: List the concentrated topics
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcentratedTopic'
              example:
              - logicalName: logicalName1
                physicalName: physicalName1
                clusterId: main
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/concentrated-topics' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
  /gateway/v2/vclusters/{vClusterName}/concentrated-topics/{logicalName}:
    get:
      tags:
      - concentrated-topics
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Get a concentrated topic of a vcluster

      operationId: Get a concentrated topic
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      - name: logicalName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcentratedTopic'
              example:
                logicalName: logicalName1
                physicalName: physicalName1
                clusterId: main
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/concentrated-topics/logicalName1' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
  /gateway/v2/vclusters/{vClusterName}/concentration-rules:
    get:
      tags:
      - concentration-rules
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        List the concentration rules of a vcluster

      operationId: List the concentration rules
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConcentrationRule'
              example:
              - name: concentrationRule1
                logicalTopicNamePattern: topic.*
                physicalTopicName: physicalTopicName
                physicalTopicNameCompacted: physicalTopicNameCompacted
                physicalTopicNameCompactedDeleted: physicalTopicNameCompactedDeleted
                clusterId: main
                autoManaged: false
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/concentration-rules' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
    put:
      tags:
      - concentration-rules
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Upsert a concentration rule in a vcluster

      operationId: Upsert a concentration rule
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConcentrationRule'
            example:
              name: concentrationRule1
              logicalTopicNamePattern: topic.*
              physicalTopicName: physicalTopicName
              physicalTopicNameCompacted: physicalTopicNameCompacted
              physicalTopicNameCompactedDeleted: physicalTopicNameCompactedDeleted
              clusterId: main
              autoManaged: false
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcentrationRule'
              example:
                name: concentrationRule1
                logicalTopicNamePattern: topic.*
                physicalTopicName: physicalTopicName
                physicalTopicNameCompacted: physicalTopicNameCompacted
                physicalTopicNameCompactedDeleted: physicalTopicNameCompactedDeleted
                clusterId: main
                autoManaged: false
        '400':
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                title: The request is not valid
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request PUT \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/concentration-rules' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --header 'Content-Type: application/json' \
            --data-raw '{"name":"concentrationRule1","logicalTopicNamePattern":"topic.*","physicalTopicName":"physicalTopicName","physicalTopicNameCompacted":"physicalTopicNameCompacted","physicalTopicNameCompactedDeleted":"physicalTopicNameCompactedDeleted","clusterId":"main","autoManaged":false}'
  /gateway/v2/vclusters/{vClusterName}/concentration-rules/{name}:
    get:
      tags:
      - concentration-rules
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Get a concentration rule of a vcluster

      operationId: Get a concentration rule
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: The name of the concentration rule (identifier in a vCluster)
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcentrationRule'
              example:
                name: concentrationRule1
                logicalTopicNamePattern: topic.*
                physicalTopicName: physicalTopicName
                physicalTopicNameCompacted: physicalTopicNameCompacted
                physicalTopicNameCompactedDeleted: physicalTopicNameCompactedDeleted
                clusterId: main
                autoManaged: false
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/concentration-rules/concentrationRule1' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
    delete:
      tags:
      - concentration-rules
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Delete a concentration rule in a vcluster

      operationId: Delete a concentration rule
      parameters:
      - name: vClusterName
        in: path
        description: The name of the vcluster
        required: true
        schema:
          type: string
      - name: name
        in: path
        description: The name of the concentration rule (identifier in a vCluster)
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given vCluster does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given vCluster does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request DELETE \
            --url 'http://localhost:8888/gateway/v2/vclusters/passthrough/concentration-rules/concentrationRule1' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
  /gateway/v2/interceptors:
    get:
      tags:
      - interceptors
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        List the interceptors

      operationId: List the interceptors
      parameters:
      - name: name
        in: query
        description: Filter by name
        required: false
        schema:
          type: string
      - name: global
        in: query
        description: Keep only global interceptors
        required: false
        schema:
          type: boolean
      - name: vCluster
        in: query
        description: Filter by vCluster
        required: false
        schema:
          type: string
      - name: group
        in: query
        description: Filter by group
        required: false
        schema:
          type: string
      - name: username
        in: query
        description: Filter by service-account
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Interceptor'
              example:
              - name: yellow_cars_filter
                comment: Filter yellow cars
                pluginClass: io.conduktor.gateway.interceptor.VirtualSqlTopicPlugin
                priority: 1
                config:
                  virtualTopic: yellow_cars
                  statement: SELECT '$.type' as type, '$.price' as price FROM cars
                    WHERE '$.color' = 'yellow'
                scope:
                  vCluster: vCluster1
        '400':
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                title: The request is not valid
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/interceptors?name=interceptor-name&global=true&vCluster=passthrough&group=group1&username=user1' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
    put:
      tags:
      - interceptors
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Upsert an interceptor

      operationId: Upsert an interceptor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Interceptor'
            example:
              name: yellow_cars_filter
              comment: Filter yellow cars
              pluginClass: io.conduktor.gateway.interceptor.VirtualSqlTopicPlugin
              priority: 1
              config:
                virtualTopic: yellow_cars
                statement: SELECT '$.type' as type, '$.price' as price FROM cars WHERE
                  '$.color' = 'yellow'
              scope:
                vCluster: vCluster1
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interceptor'
              example:
                name: yellow_cars_filter
                comment: Filter yellow cars
                pluginClass: io.conduktor.gateway.interceptor.VirtualSqlTopicPlugin
                priority: 1
                config:
                  virtualTopic: yellow_cars
                  statement: SELECT '$.type' as type, '$.price' as price FROM cars
                    WHERE '$.color' = 'yellow'
                scope:
                  vCluster: vCluster1
        '400':
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                title: The request is not valid
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request PUT \
            --url 'http://localhost:8888/gateway/v2/interceptors' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --header 'Content-Type: application/json' \
            --data-raw '{"name":"yellow_cars_filter","comment":"Filter yellow cars","pluginClass":"io.conduktor.gateway.interceptor.VirtualSqlTopicPlugin","priority":1,"config":{"virtualTopic":"yellow_cars","statement":"SELECT \'$.type\' as type, \'$.price\' as price FROM cars WHERE \'$.color\' = \'yellow\'"},"scope":{"vCluster":"vCluster1","group":null,"username":null},"timeout":null}'
  /gateway/v2/interceptors/{name}:
    delete:
      tags:
      - interceptors
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        Delete an interceptor

      operationId: Delete an interceptor
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterceptorScope'
        required: true
      responses:
        '204':
          description: ''
        '400':
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                title: The request is not valid
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '404':
          description: The given interceptor does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
              example:
                title: The given interceptor does not exist
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request DELETE \
            --url 'http://localhost:8888/gateway/v2/interceptors/yellow_cars_filter' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --header 'Content-Type: application/json' \
            --data-raw '{"vCluster":"vCluster1","group":null,"username":null}'
  /gateway/v2/interceptors/resolve:
    post:
      tags:
      - interceptors
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        A utility endpoint to resolve the interceptors for a given vCluster, groups and username.
        Helps to understand which interceptors will be applied for a given request.

      operationId: Resolve interceptors
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterceptorResolverRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Interceptor'
              example:
              - name: yellow_cars_filter
                comment: Filter yellow cars
                pluginClass: io.conduktor.gateway.interceptor.VirtualSqlTopicPlugin
                priority: 1
                config:
                  virtualTopic: yellow_cars
                  statement: SELECT '$.type' as type, '$.price' as price FROM cars
                    WHERE '$.color' = 'yellow'
                scope:
                  vCluster: vCluster1
        '400':
          description: The request is not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
              example:
                title: The request is not valid
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request POST \
            --url 'http://localhost:8888/gateway/v2/interceptors/resolve' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4=' \
            --header 'Content-Type: application/json' \
            --data-raw '{"vCluster":"passthrough","groups":["group1","group2"],"username":"user1"}'
  /gateway/v2/plugins:
    get:
      tags:
      - plugins
      description: |2+

        [![Beta](https://img.shields.io/badge/Lifecycle-Beta-orange)](#tag/Versioning)

        List the available plugins of the gateway

      operationId: List the Plugins of the Gateway
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/Plugin'
              example:
              - plugin: io.conduktor.gateway.interceptor.chaos.SimulateSlowProducersConsumersPlugin
                pluginId: io.conduktor.gateway.interceptor.chaos.SimulateSlowProducersConsumersPlugin
                readme: |2+

                  ---
                  version: ${project.version}
                  title: Simulate slow producers and consumers
                  description: Validate your application behaves correctly when there are delays in responses from the Kafka cluster.
                  parent: console
                  license: enterprise
                  ---

                  ## Introduction

                  This interceptor slows responses from the brokers.

                  It will operate only on a set of topics rather than all traffic.

                  This interceptor only works on Produce requests and Fetch requests.

                  ## Configuration

                  | key           | type    | default | description                                                     |
                  |:--------------|:--------|:--------|:----------------------------------------------------------------|
                  | topic         | String  | `.*`    | Topics that match this regex will have the interceptor applied. |
                  | rateInPercent | int     |         | The percentage of requests that will apply this interceptor     |
                  | minLatencyMs  | int     |         | Minimum for the random response latency in milliseconds         |
                  | maxLatencyMs  | int     |         | Maximum for the random response latency in milliseconds         |

                  ## Example

                  ```json
                  {
                    "name": "mySimulateSlowProducersConsumersInterceptor",
                    "pluginClass": "io.conduktor.gateway.interceptor.chaos.SimulateSlowProducersConsumersPlugin",
                    "priority": 100,
                    "config": {
                      "rateInPercent": 100,
                      "minLatencyMs": 50,
                      "maxLatencyMs": 1200
                    }
                  }
                  ```

                parent: Console
                license: enterprise
                description: Validate your application behaves correctly when broker
                  errors occur.
                title: Broker errors
                version: 3.0.1
        '401':
          description: The given credentials are not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
              example:
                title: The given credentials are not valid
        '500':
          description: An unexpected error occurred in the server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              example:
                title: An unexpected error occurred in the server
      security:
      - httpAuth: []
      x-codeSamples:
      - lang: Shell
        source: |-
          curl \
            --request GET \
            --url 'http://localhost:8888/gateway/v2/plugins' \
            --header 'Authorization: Basic YWRtaW46YWRtaW4='
components:
  schemas:
    AliasTopic:
      title: AliasTopic
      type: object
      required:
      - logicalName
      - physicalName
      properties:
        logicalName:
          description: The logical name of the alias topic
          type: string
        physicalName:
          description: The physical name of the alias topic
          type: string
        clusterId:
          description: The cluster id of the alias topic
          type: string
    BadRequest:
      title: BadRequest
      type: object
      required:
      - title
      properties:
        title:
          type: string
        msg:
          type: string
        cause:
          type: string
    ConcentratedTopic:
      title: ConcentratedTopic
      type: object
      required:
      - logicalName
      - physicalName
      properties:
        logicalName:
          description: The logical name of the concentrated topic
          type: string
        physicalName:
          description: The physical name of the concentrated topic
          type: string
        clusterId:
          description: The cluster id of the concentrated topic
          type: string
    ConcentrationRule:
      title: ConcentrationRule
      type: object
      required:
      - name
      - logicalTopicNamePattern
      - physicalTopicName
      properties:
        name:
          description: The name of the concentration rule (identifier in a vCluster)
          type: string
        logicalTopicNamePattern:
          description: The pattern of the concentration rule
          type: string
        physicalTopicName:
          description: The physical name of the concentrated topic
          type: string
        physicalTopicNameCompacted:
          description: The physical name of the topic for compact policy
          type: string
        physicalTopicNameCompactedDeleted:
          description: The pattern of the topic for delete, compact policy
          type: string
        clusterId:
          description: The cluster id of the concentration rule
          type: string
        autoManaged:
          description: Whether the concentration rule is auto managed
          type: boolean
    Interceptor:
      title: Interceptor
      type: object
      required:
      - name
      - pluginClass
      - priority
      - config
      - scope
      properties:
        name:
          description: The name of the interceptor
          type: string
        comment:
          description: An optional comment for the interceptor
          type: string
        pluginClass:
          description: The class of the plugin
          type: string
        priority:
          description: The priority of the interceptor
          type: integer
          format: int32
        config:
          $ref: '#/components/schemas/Map_Json'
        scope:
          $ref: '#/components/schemas/InterceptorScope'
          description: |2

            The scope of the interceptor.
            It can be applied to a specific vCluster or group or username.
            If none of them is set, it will be applied Globally to the gateway.
        timeout:
          description: The timeout of the interceptor in milliseconds
          type: integer
          format: int64
    InterceptorResolverRequest:
      title: InterceptorResolverRequest
      type: object
      properties:
        vCluster:
          description: The vCluster to test the interceptors resolution
          type: string
        groups:
          description: The groups to test the interceptors resolution
          type: array
          items:
            type: string
        username:
          description: The username to test the interceptors resolution
          type: string
    InterceptorScope:
      title: InterceptorScope
      type: object
      properties:
        vCluster:
          description: An optional vCluster to filter the interceptors
          type: string
        group:
          description: An optional group to filter the interceptors
          type: string
        username:
          description: An optional username to filter the interceptors
          type: string
    Map_Json:
      title: Map_Json
      description: The configuration of the interceptor
      type: object
      additionalProperties: {}
    NotFound:
      title: NotFound
      type: object
      required:
      - title
      properties:
        title:
          type: string
        msg:
          type: string
        cause:
          type: string
    Plugin:
      title: Plugin
      type: object
      required:
      - plugin
      - pluginId
      - readme
      properties:
        plugin:
          description: The name of the plugin
          type: string
        pluginId:
          description: The id of the plugin
          type: string
        readme:
          description: The readme of the plugin
          type: string
        parent:
          description: The parent of the plugin
          type: string
        license:
          description: The license of the plugin
          type: string
        description:
          description: The description of the plugin
          type: string
        title:
          description: The title of the plugin
          type: string
        version:
          description: The version of the plugin
          type: string
    ServerError:
      title: ServerError
      type: object
      required:
      - title
      properties:
        title:
          type: string
        msg:
          type: string
        cause:
          type: string
    Unauthorized:
      title: Unauthorized
      type: object
      required:
      - title
      properties:
        title:
          type: string
        msg:
          type: string
        cause:
          type: string
  securitySchemes:
    httpAuth:
      type: http
      scheme: basic
x-tagGroups:
- name: 🐺 Conduktor Gateway API
  tags:
  - Introduction
  - Authentication
  - Kinds
  - Api Groups
  - Versioning
  - Conventions
- name: 🌉 gateway/v2
  tags:
  - vclusters
  - alias-topics
  - concentrated-topics
  - concentration-rules
  - interceptors
  - plugins
  - service-accounts
  - groups
  - tokens
