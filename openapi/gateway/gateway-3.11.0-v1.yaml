info:
  title: Gateway API
  version: /v1
  description: |
    [![Deprecated](https://img.shields.io/badge/Lifecycle-Deprecated-red)]
    V1 APIs are now deprecated in favor of the [V2 APIs](./?product=gateway&gatewayApiVersion=v2) introduced in Gateway 3.3.0 in September 2024.
  contact:
    email: contact@conduktor.io
    name: Contact Conduktor
    url: https://docs.conduktor.io
  x-logo:
    altText: Conduktor logo
    backgroundColor: "#FFFFFF"
    href: https://docs.conduktor.io
    url: https://raw.githubusercontent.com/conduktor/conduktor.io-public/main/logo/conduktor-gateway-api.png
    description: API routes to administer Conduktor Gateway.
tags:
  - name: Introduction
    description: Conduktor Gateway enables you to enhance your Kafka experience without changing your applications.
  - name: Interceptors
    description: APIs to manage interceptors.
  - name: Group Interceptors
    description: APIs to manage groups interceptors.
  - name: Username Interceptors
    description: APIs to manage usernames interceptors.
  - name: Global Interceptors
    description: APIs to manage global interceptors.
  - name: User mappings
    description: APIs to perform operations on User mappings.
  - name: Username
    description: APIs to perform operations on users.
  - name: Virtual Clusters
    description: APIs to perform virtual clusters operations.
  - name: Virtual Cluster Interceptors
    description: APIs to manage virtual cluster interceptors.
  - name: VCluster Username Interceptors
    description: APIs to manage VCluster usernames interceptors.
  - name: VCluster Group Interceptors
    description: APIs to manage VCluster group interceptors.
  - name: VCluster User mappings
    description: APIs to perform operations on VCluster user mappings.
  - name: Plugins
    description: APIs to interact with plugins.
servers:
  - url: "http://localhost:8888"
paths:
  "/admin/userMappings/v1/vcluster/{vcluster}":
    post:
      summary: Create a user mapping for a virtual cluster
      tags:
        - VCluster User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to create a new user mapping
      requestBody:
        content:
          application/json:
            example:
              username: conduktor
              principal: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
              groups:
                - applicationA
                - operation
            schema:
              "$ref": "#/components/schemas/UserMappingRequest"
      responses:
        '201':
          description: User mapping created
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_createUserMapping
      deprecated: false
    get:
      summary: List user mappings for a virtual cluster
      tags:
        - VCluster User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to list user mappings for
      responses:
        '200':
          description: List of the topic mappings with their configuration
          content:
            application/json:
              example:
                - username1
                - username2
              schema:
                items:
                  type: string
                example:
                  - username1
                  - username2
                type: array
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_listUserMappings
      deprecated: false
  "/admin/userMappings/v1/vcluster/{vcluster}/username/{username}":
    get:
      summary: Get a user mapping
      tags:
        - User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to get the user mapping for
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to get the user mapping for
      responses:
        '200':
          description: User mapping
          content:
            application/json:
              example:
                username: conduktor
                principal: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
                groups:
                  - applicationA
                  - operation
              schema:
                "$ref": "#/components/schemas/UserMapping"
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_getUserMapping
      deprecated: false
    put:
      summary: Create or update a user mapping for a virtual cluster
      description: "Create or update a user mapping to define a gateway user from an authentication principal"
      tags:
        - VCluster User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to create a user mapping for
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to create the user mapping for
      requestBody:
        content:
          application/json:
            example:
              username: conduktor
              principal: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
              groups:
                - applicationA
                - operation
            schema:
              "$ref": "#/components/schemas/UserMappingRequest"
      responses:
        '201':
          description: User mapping created
        '204':
          description: User mapping updated
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_createOrUpdateUserMapping
      deprecated: false
    delete:
      summary: Delete a user mapping for a virtual cluster
      tags:
        - VCluster User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to delete a user mapping for
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to delete the user mapping for
      responses:
        '204':
          description: User mapping deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_deleteUserMapping
      deprecated: false

  "/admin/userMappings/v1":
    post:
      summary: Create a user mapping
      description: "Create a user mapping to define a gateway user from an authentication principal"
      tags:
        - User mappings
      requestBody:
        content:
          application/json:
            example:
              username: conduktor
              principal: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
              groups:
                - applicationA
                - operation
            schema:
              "$ref": "#/components/schemas/UserMappingRequest"
      responses:
        '201':
          description: User mapping created
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_createPassThroughUserMapping
      deprecated: false
    get:
      summary: List user mappings
      tags:
        - User mappings
      responses:
        '200':
          description: List of the topic mappings with their configuration
          content:
            application/json:
              example:
                - username1
                - username2
              schema:
                items:
                  type: string
                example:
                  - username1
                  - username2
                type: array
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_listPassThroughUserMappings
      deprecated: false
  "/admin/userMappings/v1/username/{username}":
    get:
      summary: Get a user mapping
      tags:
        - User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to get the user mapping for
      responses:
        '200':
          description: User mapping
          content:
            application/json:
              example:
                username: conduktor
                principal: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
                groups:
                  - applicationA
                  - operation
              schema:
                "$ref": "#/components/schemas/UserMapping"
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_getPassThroughUserMapping
      deprecated: false
    put:
      summary: Create or update a user mapping
      description: "Create or update a user mapping to define a gateway user from an authentication principal"
      tags:
        - User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to create the user mapping for
      requestBody:
        content:
          application/json:
            example:
              username: conduktor
              principal: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
              groups:
                - applicationA
                - operation
            schema:
              "$ref": "#/components/schemas/UserMappingRequest"
      responses:
        '201':
          description: User mapping created
        '204':
          description: User mapping updated
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_createOrUpdatePassThroughUserMapping
      deprecated: false
    delete:
      summary: Delete a user mapping
      tags:
        - User mappings
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to delete the user mapping for
      responses:
        '204':
          description: User mapping deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_deletePassThroughUserMapping
      deprecated: false

  "/admin/vclusters/v1/vcluster/{vcluster}/username/{username}":
    post:
      summary: Create a virtual cluster with a username to connect to it
      tags:
        - Virtual Clusters
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id to give to the new virtual cluster
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to connect to the newly created virtual cluster
      requestBody:
        content:
          application/json:
            example:
              lifeTimeSeconds: 7776000
            schema:
              "$ref": "#/components/schemas/ClusterTokenRequest"
        required: true
      responses:
        '201':
          description: Username token created
          content:
            application/json:
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
              schema:
                "$ref": "#/components/schemas/ClusterToken"
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster doesn't exist.
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Auth_v1_createClusterAccountToken
      deprecated: false
  "/admin/username/{username}":
    post:
      summary: Create a username
      tags:
        - Username
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: The username to connect to the newly created
      requestBody:
        content:
          application/json:
            example:
              lifeTimeSeconds: 7776000
            schema:
              "$ref": "#/components/schemas/ClusterTokenRequest"
        required: true
      responses:
        '201':
          description: Username token created
          content:
            application/json:
              example:
                token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
              schema:
                "$ref": "#/components/schemas/ClusterToken"
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster doesn't exist.
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Auth_v1_createPassThroughClusterAccountToken
      deprecated: false
  "/admin/vclusters/v1":
    get:
      summary: List virtual clusters
      tags:
        - Virtual Clusters
      parameters: [ ]
      responses:
        '200':
          description: List of virtual cluster ids with topic mappings
          content:
            application/json:
              example:
                vclusters:
                  - vcluster1
                  - vcluster2
              schema:
                "$ref": "#/components/schemas/VClusterList"
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_listClusters
      deprecated: false
  "/admin/vclusters/v1/vcluster/{vcluster}/topics":
    delete:
      summary: Delete all topic mappings for a virtual cluster
      tags:
        - Virtual Clusters
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to delete topics for
      responses:
        '204':
          description: Virtual cluster topic mappings deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual Cluster doesn't have any topic mappings
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_deleteClusters
      deprecated: false
    get:
      summary: List topic mappings for a virtual cluster
      tags:
        - Virtual Clusters
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to list topic mappings for
      responses:
        '200':
          description: List of the topic mappings with their configuration
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/TopicMapping"
                example:
                  - logicalTopicName: topic1
                    physicalTopicName: physicalTopic
                    readOnly: true
                    type: concentrated
                    autoManaged: false
                  - logicalTopicName: topic2
                    physicalTopicName: physicalTopic2
                    readOnly: false
                    type: concentrated
                type: array
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual Cluster doesn't have any topic mappings defined
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_listClusterTopicMapping
      deprecated: false
  "/admin/vclusters/v1/vcluster/{vcluster}/topics/{logicalTopicName}":
    delete:
      summary: Delete a topic mapping for a virtual cluster
      description: Delete targeted topic mapping for a virtual cluster. If this API call is
        deleting the last topic mapping registered for a virtual cluster, the virtual cluster will not
        be visible anymore after deletion in the multi-tenancy API.
      tags:
        - Virtual Clusters
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to delete a topic mapping for
        - schema:
            type: string
          in: path
          name: logicalTopicName
          required: true
          description: The logical topic name to delete the topic mapping for
      responses:
        '204':
          description: Topic mapping deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Topic (logical topic name) or virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_deleteClusterTopicMapping
      deprecated: false
    post:
      summary: Create topic mapping for a virtual cluster
      tags:
        - Virtual Clusters
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to create a topic mapping for
        - schema:
            type: string
          in: path
          name: logicalTopicName
          required: true
          description: Topic name to expose
      requestBody:
        content:
          application/json:
            example:
              physicalTopicName: physicalTopic
              readOnly: true
              type: alias
            schema:
              "$ref": "#/components/schemas/TopicMappingRequest"
        required: true
      responses:
        '201':
          description: Topic mapping created
          content:
            application/json:
              example:
                logicalTopicName: logicalTopicName
                physicalTopicName: physicalTopic
                readOnly: true
                type: alias
                autoManaged: false
              schema:
                "$ref": "#/components/schemas/TopicMapping"
        '400':
          description: If physicalTopicName is not existing on backend cluster
          content:
            application/json:
              example:
                message: Physical topic named physicalTopic does not exist in your kafka
                  cluster
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. PhysicalTopicName cannot be updated
          content:
            application/json:
              example:
                message: You can't update the physicalTopicName for an existing topic
                  mapping.
        '503':
          description: Error when calling backend kafka to verify physical topic
          content:
            application/json:
              example:
                message: Error when calling backend kafka to verify if topic named
                  physicalTopic exists
      security:
        - basicAuth: [ ]
      operationId: Clusters_v1_createClusterTopicMapping
      deprecated: false
  "/admin/vclusters/v1/vcluster/{vcluster}/concentration-rules":
    post:
      tags:
        - Virtual Clusters
      summary: Create a concentration rule
      operationId: ConcentrationRule_createConcentrationRule
      parameters:
        - name: vcluster
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clusterId:
                  type: string
                  example: main
                  description: Optional - Kafka cluster for merge cluster (default "main")
                pattern:
                  type: string
                  example: topic.*
                  description: Logical topic name to apply concentration for
                physicalTopicName:
                  type: string
                  example: concentrated
                  description: Physical topic to store concentrated topic
                physicalTopicCompactedName:
                  type: string
                  example: concentrated_compacted
                  description: Optional - Physical topic to concentrate on for logical topic with compacted cleanup policy
                physicalTopicCompactedDeletedName:
                  type: string
                  example: concentrated_compacteddeleted
                  description: Optional - Physical topic to concentrate on for logical topic with compacted deleted cleanup policy
                autoManaged:
                  type: boolean
                  example: false
                  description: Optional - Enable Gateway to auto manage backend topic
              required:
                - pattern
                - physicalTopicName
      responses:
        '201':
          description: Rule created
        '400':
          description: Invalid input
      security:
        - basicAuth: [ ]
    get:
      tags:
        - Virtual Clusters
      summary: Get concentration rules
      operationId: ConcentrationRule_getConcentrationRules
      parameters:
        - name: vcluster
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    clusterId:
                      type: string
                      example: main
                      description: Optional - Kafka cluster for merge cluster (default "main")
                    pattern:
                      type: string
                      example: topic.*
                      description: Logical topic name to apply concentration for
                    physicalTopicName:
                      type: string
                      example: concentrated
                      description: Physical topic to store concentrated topic
                    physicalTopicCompactedName:
                      type: string
                      example: concentrated_compacted
                      description: Optional - Physical topic to concentrate on for logical topic with compacted cleanup policy
                    physicalTopicCompactedDeletedName:
                      type: string
                      example: concentrated_compacteddeleted
                      description: Optional - Physical topic to concentrate on for logical topic with compacted deleted cleanup policy
                    autoManaged:
                      type: boolean
                      example: false
                      description: Optional - Enable Gateway to auto manage backend topic
                  required:
                    - pattern
                    - physicalTopicName
        '400':
          description: Invalid request
      security:
        - basicAuth: [ ]
    delete:
      summary: Delete a concentration rule
      tags:
        - Virtual Clusters
      operationId: ConcentrationRule_deleteConcentrationRule
      parameters:
        - name: vcluster
          in: path
          required: true
          schema:
            type: string
        - name: pattern
          in: query
          required: false
          description: The pattern to delete. If not provided, all rules will be deleted.
          schema:
            type: string
      responses:
        '204':
          description: Rule deleted
        '404':
          description: Rule not found
      security:
        - basicAuth: [ ]
  "/admin/pclusters/v1/pcluster/{pcluster}/switch":
    post:
      summary: Replace the connection properties of a physical cluster with properties from another cluster. Used for cluster switching.
      tags:
        - Physical Clusters
      parameters:
        - schema:
            type: string
          in: path
          name: pcluster
          required: true
          description: Physical Cluster id to update
        - schema:
            type: string
          in: query
          name: to
          required: true
          description: Physical Cluster id to switch to
      responses:
        '200':
          description: Physical Cluster switched
          content: { }
        '400':
          description: Bad parameter. A cluster id is not configured
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: PhysClusters_v1_clusterSwitch
      deprecated: false
      x-cdk-run-version: '1'
      x-cdk-run-name: switchPhysicalCluster
      x-cdk-run-doc: Replace the connection properties of a physical cluster with properties from another cluster. Used for cluster switching.
  "/admin/pclusters/v1/pcluster/{pcluster}":
    get:
      summary: Get connection configuration for physical cluster id
      tags:
        - Physical Clusters
      parameters:
        - schema:
            type: string
          in: path
          name: pcluster
          required: true
          description: Physical Cluster id
      responses:
        '200':
          description: Current connection configuration of physical cluster
          content:
            application/json:
              example:
                boostrap.server: 192.169.0.1:9092
                security.protocol: SASL_PLAINTEXT
                sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="user" password="password";
                sasl.mechanism: PLAIN
              schema:
                type: object
                additionalProperties:
                  type: string
        '400':
          description: Bad parameter. A cluster id is not configured
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: PhysClusters_v1_getPClusterInfo
      deprecated: false
  "/admin/interceptors/v1/vcluster/{vcluster}/interceptor/{interceptorName}":
    post:
      summary: Create an interceptor for a virtual cluster
      tags:
        - Virtual Cluster Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to create an interceptor for
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '201':
          description: Interceptor created
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. cluster + interceptorName must be unique.
          content:
            application/json:
              example:
                message: interceptorName for cluster must be unique.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createClusterInterceptor
      deprecated: false
    put:
      summary: Update an interceptor for a virtual cluster
      tags:
        - Virtual Cluster Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to update an interceptor for
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name for update
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '200':
          description: Interceptor created or updated
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createOrUpdateClusterInterceptor
      deprecated: false
    get:
      summary: Get info on an interceptor for a virtual cluster
      tags:
        - Virtual Cluster Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to get information on an interceptor for
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to get information on
      responses:
        '200':
          description: Interceptor updated
          content:
            application/json:
              example:
                name: myEncryptionInterceptor
                pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                priority: 50
                config:
                  topic: topicName
              schema:
                "$ref": "#/components/schemas/InterceptorResponse"
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getClusterInterceptor
      deprecated: false
    delete:
      summary: Delete an interceptor for a virtual cluster
      description: Delete an interceptor for a virtual cluster
      tags:
        - Virtual Cluster Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to delete an interceptor for
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: The name of the interceptor to delete
      responses:
        '204':
          description: Interceptor deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_deleteClusterInterceptor
      deprecated: false
  "/admin/interceptors/v1/vcluster/{vcluster}/interceptors":
    get:
      summary: Get interceptors of a cluster
      tags:
        - Virtual Cluster Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to get interceptors
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getClusterInterceptors_deprecated
      deprecated: true
  "/admin/interceptors/v1/vcluster/{vcluster}":
    get:
      summary: Get interceptors of a cluster
      tags:
        - Virtual Cluster Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to get interceptors
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getClusterInterceptors
      deprecated: false
  "/admin/interceptors/v1/vcluster/{vcluster}/username/{username}/interceptor/{interceptorName}":
    post:
      summary: Add interceptor for a specific username within a virtual cluster
      tags:
        - VCluster Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to create an interceptor for
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to apply the interceptor to
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '201':
          description: Interceptor created
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createAccountInterceptor
      deprecated: false
    put:
      summary: Update interceptor for a username within a virtual cluster
      tags:
        - VCluster Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to update an interceptor for
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to apply the updated interceptor
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to update
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '200':
          description: Interceptor updated
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. cluster + interceptorName must be unique.
          content:
            application/json:
              example:
                message: interceptorName for cluster must be unique.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_updateAccountInterceptor
      deprecated: false
    get:
      summary: Get an interceptor for a username within a given virtual cluster
      tags:
        - VCluster Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to get interceptors
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to get data
      responses:
        '200':
          description: VCluster Username Interceptors
          content:
            application/json:
              example:
                name: myEncryptionInterceptor
                pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                priority: 50
                config:
                  topic: topicName
              schema:
                "$ref": "#/components/schemas/InterceptorResponse"
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getAccountInterceptor
      deprecated: false
    delete:
      summary: Delete an interceptor for a username within a virtual cluster
      description: Delete an interceptor for a username
      tags:
        - VCluster Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to delete an interceptor from
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to delete interceptors from
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: The interceptor name to delete
      responses:
        '204':
          description: Interceptor deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_deleteAccountInterceptor
      deprecated: false
  "/admin/interceptors/v1/vcluster/{vcluster}/username/{username}/interceptors":
    get:
      summary: Get interceptors of a username within a virtual cluster
      tags:
        - VCluster Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to get interceptors for
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to get interceptors for
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getAccountInterceptors_deprecated
      deprecated: true
  "/admin/interceptors/v1/vcluster/{vcluster}/username/{username}":
    get:
      summary: Get interceptors of a username within a virtual cluster
      tags:
        - VCluster Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to get interceptors for
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to get interceptors for
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getAccountInterceptors
      deprecated: false
  "/admin/interceptors/v1/interceptor/{interceptorName}":
    post:
      summary: Create an interceptor
      tags:
        - Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '201':
          description: Interceptor created
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. cluster + interceptorName must be unique.
          content:
            application/json:
              example:
                message: interceptorName for cluster must be unique.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createPassThroughClusterInterceptor
      deprecated: false
    put:
      summary: Update an interceptor
      tags:
        - Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name for update
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '200':
          description: Interceptor updated
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createOrUpdatePassThroughClusterInterceptor
      deprecated: false
    get:
      summary: Get info on an interceptor
      tags:
        - Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to get information on
      responses:
        '200':
          description: Interceptor updated
          content:
            application/json:
              example:
                name: myEncryptionInterceptor
                pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                priority: 50
                config:
                  topic: topicName
              schema:
                "$ref": "#/components/schemas/InterceptorResponse"
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getPassThroughClusterInterceptor
      deprecated: false
    delete:
      summary: Delete an interceptor
      description: Delete an interceptor
      tags:
        - Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: The name of the interceptor to delete
      responses:
        '204':
          description: Interceptor deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_deletePassThroughClusterInterceptor
      deprecated: false
  "/admin/interceptors/v1":
    get:
      summary: Get interceptors
      tags:
        - Interceptors
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getPassThroughClusterInterceptors
      deprecated: false
  "/admin/interceptors/v1/vcluster/{vcluster}/group/{group}/interceptor/{interceptorName}":
    post:
      summary: Add interceptor for a specific group within a virtual cluster
      tags:
        - VCluster Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to create an interceptor for
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to apply the interceptor to
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '201':
          description: Interceptor created
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createGroupInterceptor
      deprecated: false
    put:
      summary: Update interceptor for a group within a virtual cluster
      tags:
        - VCluster Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to update an interceptor for
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to apply the updated interceptor
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to update
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '200':
          description: Interceptor updated
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. cluster + interceptorName must be unique.
          content:
            application/json:
              example:
                message: interceptorName for cluster must be unique.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_updateGroupInterceptor
      deprecated: false
    get:
      summary: Get an interceptor for a group within a given virtual cluster
      tags:
        - VCluster Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to get interceptors
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to get data
      responses:
        '200':
          description: VCluster Group Interceptors
          content:
            application/json:
              example:
                name: myEncryptionInterceptor
                pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                priority: 50
                config:
                  topic: topicName
              schema:
                "$ref": "#/components/schemas/InterceptorResponse"
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getGroupInterceptor
      deprecated: false
    delete:
      summary: Delete an interceptor for a group within a virtual cluster
      description: Delete an interceptor for a group within a virtual cluster
      tags:
        - VCluster Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to delete an interceptor from
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to delete interceptors from
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: The interceptor name to delete
      responses:
        '204':
          description: Interceptor deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_deleteGroupInterceptor
      deprecated: false
  "/admin/interceptors/v1/vcluster/{vcluster}/group/{group}":
    get:
      summary: Get interceptors of a group within a virtual cluster
      tags:
        - VCluster Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: vcluster
          required: true
          description: The id of the virtual cluster to get interceptors for
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to get interceptors for
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getGroupInterceptors
      deprecated: false
  "/admin/interceptors/v1/username/{username}/interceptor/{interceptorName}":
    post:
      summary: Add interceptor for a specific username
      tags:
        - Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to apply the interceptor to
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '201':
          description: Interceptor created
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createPassThroughAccountInterceptor
      deprecated: false
    put:
      summary: Update interceptor for a username
      tags:
        - Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to apply the updated interceptor
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to update
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '200':
          description: Interceptor updated
          content: { }
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. cluster + interceptorName must be unique.
          content:
            application/json:
              example:
                message: interceptorName for cluster must be unique.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_updatePassThroughAccountInterceptor
      deprecated: false
    get:
      summary: Get an interceptor for a username
      tags:
        - Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to get interceptors
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to get data
      responses:
        '200':
          description: Username Interceptors
          content:
            application/json:
              example:
                name: myEncryptionInterceptor
                pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                priority: 50
                config:
                  topic: topicName
              schema:
                "$ref": "#/components/schemas/InterceptorResponse"
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getPassThroughAccountInterceptor
      deprecated: false
    delete:
      summary: Delete an interceptor for a username
      description: Delete an interceptor for a username
      tags:
        - Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to delete interceptors from
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: The interceptor name to delete
      responses:
        '204':
          description: Interceptor deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_deletePassThroughAccountInterceptor
      deprecated: false
  "/admin/interceptors/v1/username/{username}":
    get:
      summary: Get interceptors of a username
      tags:
        - Username Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: username
          required: true
          description: the username to get interceptors for
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getPassThroughAccountInterceptors
      deprecated: false
  "/admin/interceptors/v1/group/{group}/interceptor/{interceptorName}":
    post:
      summary: Add interceptor for a specific group
      tags:
        - Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to apply the interceptor to
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '201':
          description: Interceptor created
          content:
            application/json:
              example: myInterceptor is created
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createPassThroughGroupInterceptor
      deprecated: false
    put:
      summary: Upsert interceptor for a group
      tags:
        - Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to apply the updated interceptor
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to update
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '200':
          description: Interceptor updated
          content:
            application/json:
              example: myInterceptor is updated
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. cluster + interceptorName must be unique.
          content:
            application/json:
              example:
                message: interceptorName for cluster must be unique.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_updatePassThroughGroupInterceptor
      deprecated: false
    get:
      summary: Get an interceptor for a group
      tags:
        - Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to get interceptors
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to get data
      responses:
        '200':
          description: Group Interceptors
          content:
            application/json:
              example:
                name: myEncryptionInterceptor
                pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                priority: 50
                config:
                  topic: topicName
              schema:
                "$ref": "#/components/schemas/InterceptorResponse"
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getPassThroughGroupInterceptor
      deprecated: false
    delete:
      summary: Delete an interceptor for a group
      description: Delete an interceptor for a grouo
      tags:
        - Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to delete interceptors from
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: The interceptor name to delete
      responses:
        '204':
          description: Interceptor deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_deletePassThroughGroupInterceptor
      deprecated: false
  "/admin/interceptors/v1/group/{group}":
    get:
      summary: Get interceptors of a group
      tags:
        - Group Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: group
          required: true
          description: the group to get interceptors for
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getPassThroughGroupInterceptors
      deprecated: false
  "/admin/interceptors/v1/global/interceptor/{interceptorName}":
    post:
      summary: Add global interceptor
      tags:
        - Global Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '201':
          description: Interceptor created
          content:
            application/json:
              example: myInterceptor is created
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_createGlobalInterceptor
      deprecated: false
    put:
      summary: Upsert global interceptor
      tags:
        - Global Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to update
      requestBody:
        content:
          application/json:
            example:
              pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
              priority: 50
              config:
                topic: topicName
            schema:
              "$ref": "#/components/schemas/InterceptorRequest"
        required: true
      responses:
        '200':
          description: Interceptor updated
          content:
            application/json:
              example: myInterceptor is updated
        '400':
          description: If bad config, bad priority and bad class name
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '409':
          description: Invalid update detected. cluster + interceptorName must be unique.
          content:
            application/json:
              example:
                message: interceptorName for cluster must be unique.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_updateGlobalInterceptor
      deprecated: false
    get:
      summary: Get a global interceptor
      tags:
        - Global Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: Interceptor name to get data
      responses:
        '200':
          description: Global Interceptors
          content:
            application/json:
              example:
                name: myEncryptionInterceptor
                pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                priority: 50
                config:
                  topic: topicName
              schema:
                "$ref": "#/components/schemas/InterceptorResponse"
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getGlobalInterceptor
      deprecated: false
    delete:
      summary: Delete a global interceptor
      description: Delete a global interceptor
      tags:
        - Global Interceptors
      parameters:
        - schema:
            type: string
          in: path
          name: interceptorName
          required: true
          description: The interceptor name to delete
      responses:
        '204':
          description: Interceptor deleted
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Interceptor (interceptor name) or cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_deleteGlobalInterceptor
      deprecated: false
  "/admin/interceptors/v1/global":
    get:
      summary: Get global interceptors
      tags:
        - Global Interceptors
      responses:
        '200':
          description: Global interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsResponse"
                example:
                  interceptors:
                    - name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getGlobalInterceptors
      deprecated: false

  "/admin/interceptors/v1/interceptors":
    get:
      summary: Get all interceptors (virtual cluster and global interceptors)
      tags:
        - Virtual Cluster Interceptors
        - VCluster Username Interceptors
        - Interceptors
        - Username Interceptors
      parameters:
        - schema:
            type: string
          in: query
          name: pluginClass
          required: false
          description: Interceptor plugin class name to filter the data
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - vcluster: ''
                    name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - vcluster: cluster1
                    name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
                  - vcluster: cluster1
                    username: username1
                    name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsWithClusterResponse"
                example:
                  interceptors:
                    - vcluster: ''
                      name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - vcluster: cluster1
                      name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                    - vcluster: cluster1
                      username: account1
                      name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getInterceptors_deprecated
      deprecated: true
  "/admin/interceptors/v1/all":
    get:
      summary: Get all interceptors (virtual cluster and global interceptors)
      tags:
        - Virtual Cluster Interceptors
        - VCluster Username Interceptors
        - Interceptors
        - Username Interceptors
      parameters:
        - schema:
            type: string
          in: query
          name: pluginClass
          required: false
          description: Interceptor plugin class name to filter the data
      responses:
        '200':
          description: Interceptor list
          content:
            application/json:
              example:
                interceptors:
                  - vcluster: ''
                    name: myEncryptionInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                    priority: 50
                    config:
                      topic: topicName
                  - vcluster: cluster1
                    name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
                  - vcluster: cluster1
                    username: username1
                    name: myInjectHeaderInterceptor
                    pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                    priority: 51
                    config:
                      topic: topicName
              schema:
                items:
                  "$ref": "#/components/schemas/InterceptorsWithClusterResponse"
                example:
                  interceptors:
                    - vcluster: ''
                      name: myEncryptionInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
                      priority: 50
                      config:
                        topic: topicName
                    - vcluster: cluster1
                      name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                    - vcluster: cluster1
                      username: account1
                      name: myInjectHeaderInterceptor
                      pluginClass: io.conduktor.gateway.interceptor.DynamicHeaderInjectionPlugin
                      priority: 51
                      config:
                        topic: topicName
                type: array
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
        '404':
          description: Virtual cluster not found
          content: { }
      security:
        - basicAuth: [ ]
      operationId: Interceptor_v1_getInterceptors
      deprecated: false
  "/admin/plugins/v1":
    get:
      summary: List all available plugins
      tags:
        - Plugins
      responses:
        '200':
          description: List all available plugins
          content:
            application/json:
              example:
                plugins: [
                  io.conduktor.gateway.interceptor.AlterBrokerConfigsSafeGuardPlugin,
                  io.conduktor.gateway.interceptor.AlterTopicConfigsSafeGuardPlugin
                ]
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Plugins_v1_getPlugins
      deprecated: false
  "/admin/plugins/v1/extended":
    get:
      summary: Get all available plugins with extended information
      tags:
        - Plugins
      responses:
        '200':
          description: Get all available plugins with extended information
          content:
            application/json:
              example:
                plugins: [
                  {
                    "plugin": "io.conduktor.gateway.interceptor.chaos.SimulateSlowProducersConsumersPlugin",
                    "pluginId": "io.conduktor.gateway.interceptor.chaos.SimulateSlowProducersConsumersPlugin",
                    "tags": {
                      "parent": "Console",
                      "license": "enterprise",
                      "description": "Validate your application behaves correctly when broker errors occur.",
                      "title": "Broker errors",
                      "version": "1.0.1-SNAPSHOT"
                    },
                    "readme": "---\nversion: 1.0.1-SNAPSHOT\ntitle: Broker errors\ndescription: Validate your application behaves correctly when broker errors occur.\nparent: chaos\nlicense: enterprise\n---\n\n## What is Broken broker chaos?\n\nThis interceptor inject intermittent errors in client connections to brokers that are consistent with broker side  issues. \n\nThis only works on Produce requests and Fetch requests.\n\n## Configuration\n\n| config        | type | description                                                                                                                                                                     |\n|:--------------|------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| rateInPercent | int  | The percentage of requests that will result in a broker not available response                                                                                                  |\n| errorMap      | Map  | Map of ApiKeys and Error you want to response, not required.Default errorMap when errorMap is not configured:FETCH: UNKNOWN_SERVER_ERRORPRODUCE: CORRUPT_MESSAGE |\n\n## Possible Error for Api Key\n\n### [FETCH](https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/requests/FetchResponse.java#L48-L65):\n\n- OFFSET_OUT_OF_RANGE\n- TOPIC_AUTHORIZATION_FAILED\n- REPLICA_NOT_AVAILABLE\n- NOT_LEADER_OR_FOLLOWER\n- FENCED_LEADER_EPOCH\n- UNKNOWN_LEADER_EPOCH\n- UNKNOWN_TOPIC_OR_PARTITION\n- KAFKA_STORAGE_ERROR\n- UNSUPPORTED_COMPRESSION_TYPE\n- CORRUPT_MESSAGE\n- UNKNOWN_TOPIC_ID\n- FETCH_SESSION_TOPIC_ID_ERROR,\n- INCONSISTENT_TOPIC_ID,\n- UNKNOWN_SERVER_ERROR\n\n### [PRODUCE](https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java#L39-L53):\n\n- CORRUPT_MESSAGE,\n- UNKNOWN_TOPIC_OR_PARTITION,\n- NOT_LEADER_OR_FOLLOWER,\n- INVALID_TOPIC_EXCEPTION,\n- RECORD_LIST_TOO_LARGE,\n- NOT_ENOUGH_REPLICAS,\n- NOT_ENOUGH_REPLICAS_AFTER_APPEND,\n- INVALID_REQUIRED_ACKS,\n- TOPIC_AUTHORIZATION_FAILED,\n- UNSUPPORTED_FOR_MESSAGE_FORMAT,\n- INVALID_PRODUCER_EPOCH,\n- CLUSTER_AUTHORIZATION_FAILED,\n- TRANSACTIONAL_ID_AUTHORIZATION_FAILED,\n- INVALID_RECORD\n\n## Example\n\n```yaml\n    name: myBrokenBrokerChaosInterceptor\n    pluginClass: io.conduktor.gateway.interceptor.BrokenBrokerChaosPlugin\n    priority: 100\n    config:\n      - key: rateInPercent\n        value: 100\n      - key: errorMap\n        value:\n          FETCH: UNKNOWN_SERVER_ERROR\n          PRODUCE: CORRUPT_MESSAGE\n```"
                  }
                ]
        '400':
          description: If bad request
          content: { }
        '401':
          description: ''
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Plugins_v1_getPluginsExtended
      deprecated: false
  "/admin/interceptors/v1/resolve":
    post:
      summary: resolve targeting for the given context
      tags:
        - Interceptors
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResolveTargetingInputDto"
        required: true
      responses:
        '200':
          description: Create or update a targeting
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/ResolveTargetingDto"
                type: array
        '400':
          description: If bad request
          content: { }
        '403':
          description: Permission not granted
          content:
            application/json:
              example:
                message: You do not have permission to call this API, please contact your administrator.
      security:
        - basicAuth: [ ]
      operationId: Interceptors_v1_resolveTargeting
      deprecated: false
components:
  schemas:
    ResolveTargetingDto:
      type: object
      properties:
        configName:
          type: string
        scope:
          type: string
        pluginClass:
          type: string
        vcluster:
          type: string
        group:
          type: string
        username:
          type: string
        priority:
          type: integer
        config:
          type: object
    ResolveTargetingInputDto:
      type: object
      properties:
        vcluster:
          type: string
        username:
          type: string
        groups:
          items:
            type: string
          type: array
    CreateTargetingRuleDto:
      type: object
      properties:
        enabled:
          type: boolean
        comment:
          type: string
        vclusters:
          items:
            type: string
          type: array
        groups:
          items:
            type: string
          type: array
        users:
          items:
            type: string
          type: array
    CreateTargetingDto:
      type: object
      properties:
        pluginClass:
          example: "io.conduktor.gateway.interceptor.chaos.SimulateSlowProducersConsumersPlugin"
          type: string
        priority:
          example: 1
          format: int32
          type: integer
        timeoutMs:
          example: 1
          format: int64
          type: integer
        rules:
          items:
            "$ref": "#/components/schemas/CreateTargetingRuleDto"
          type: array
    ClusterToken:
      properties:
        token:
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
          type: string
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      type: object
      required:
        - token
    ClusterTokenRequest:
      properties:
        lifeTimeSeconds:
          example: 7776000
          format: int64
          type: integer
      example:
        lifeTimeSeconds: 7776000
      type: object
      required:
        - lifeTimeSeconds
    UserMappingRequest:
      properties:
        username:
          example: conduktor
          type: string
          description: Username for a user
        principal:
          example: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
          type: string
          nullable: true
          description: Authentication Principal to map a user from (will use username if not defined)
        groups:
          items:
            type: string
          type: array
          nullable: true
          example:
            - groupA
            - groupB
      type: object
      required:
        - username
    UserMapping:
      properties:
        vcluster:
          example: vcluster1
          type: string
          description: The id of the virtual cluster
        username:
          example: conduktor
          type: string
          description: Username for a user
        principal:
          example: 59fccdbd-9212-4aac-92be-5f3f59f2e8db
          type: string
          nullable: true
          description: Authentication Principal to map a user from (will use username if not defined)
        groups:
          items:
            type: string
          type: array
          nullable: true
          example:
            - groupA
            - groupB
      type: object
      required:
        - vcluster
        - username
    VClusterList:
      properties:
        vclusters:
          items:
            type: string
          example:
            - vcluster1
            - vcluster2
          type: array
      example:
        vclusters:
          - vcluster1
          - vcluster2
      type: object
      required:
        - vclusters
    TopicMapping:
      properties:
        logicalTopicName:
          example: logicalTopicName
          type: string
        physicalTopicName:
          example: physicalTopic
          type: string
        readOnly:
          example: true
          type: boolean
        type:
          example: alias
          type: string
        autoManaged:
          example: false
          type: boolean
      example:
        logicalTopicName: logicalTopicName
        physicalTopicName: physicalTopic
        readOnly: true
        type: alias
      type: object
      required:
        - logicalTopicName
        - physicalTopicName
        - readOnly
        - type
    TopicMappingRequest:
      properties:
        physicalTopicName:
          example: physicalTopic
          type: string
        readOnly:
          example: true
          type: boolean
        autoManaged:
          example: false
          type: boolean
        type:
          example: alias
          type: string
          description: |
            Type of mapping (case insensitive):
            enum:
              - ALIAS
              - CONCENTRATED
      #             TODO - SQL
      example:
        physicalTopicName: physicalTopic
        readOnly: true
        type: alias
      type: object
      required:
        - physicalTopicName
        - readOnly
        - type
    InterceptorRequest:
      properties:
        pluginClass:
          example: io.conduktor.gateway.interceptor.EncryptPlugin
          type: string
        priority:
          example: 50
          type: integer
        config:
          type: object
      example:
        pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
        priority: 50
        config:
          topic: topicName
      type: object
      required:
        - pluginClass
        - priority
        - config
    InterceptorsResponse:
      properties:
        interceptors:
          type: array
          items:
            $ref: "#/components/schemas/InterceptorResponse"
      example:
        interceptors:
          - name: myEncryptionInterceptor
            pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
            priority: 50
            config:
              topic: topicName
      type: object
    InterceptorResponse:
      properties:
        name:
          example: myEncryptionInterceptor
          type: string
        pluginClass:
          example: io.conduktor.gateway.interceptor.EncryptPlugin
          type: string
        priority:
          example: 50
          type: integer
        config:
          type: object
      example:
        name: myEncryptionInterceptor
        pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
        priority: 50
        config:
          topic: topicName
      type: object
      required:
        - name
        - pluginClass
        - priority
        - config
    InterceptorsWithClusterResponse:
      properties:
        interceptors:
          type: array
          items:
            $ref: '#/components/schemas/InterceptorWithClusterResponse'
      example:
        interceptors:
          - vcluster: cluster1
            username: account1
            name: myEncryptionInterceptor
            pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
            priority: 50
            config:
              topic: topicName
      type: object
    InterceptorWithClusterResponse:
      properties:
        vcluster:
          example: vcluster1
          type: string
        group:
          example: accounting
          type: string
        username:
          example: account1
          type: string
        name:
          example: myEncryptionInterceptor
          type: string
        pluginClass:
          example: io.conduktor.gateway.interceptor.EncryptPlugin
          type: string
        priority:
          example: 50
          type: integer
        config:
          type: object
      example:
        vcluster: cluster1
        username: account1
        name: myEncryptionInterceptor
        pluginClass: io.conduktor.gateway.interceptor.EncryptPlugin
        priority: 50
        config:
          topic: topicName
      type: object
      required:
        - name
        - pluginClass
        - priority
        - config
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
openapi: 3.0.0